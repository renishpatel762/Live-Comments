# monitoring/docker-compose.yml
version: '3.8'

networks:
  live_comments_network:
    external: true

services:
  # Redis Exporter for Prometheus
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
      - REDIS_EXPORTER_LOG_FORMAT=json
    networks:
      - live_comments_network
    restart: unless-stopped
    labels:
      - "logging=promtail"

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - live_comments_network
    restart: unless-stopped
    labels:
      - "logging=promtail"

  # cAdvisor for container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    # ports:
    #   - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - live_comments_network
    restart: unless-stopped
    labels:
      - "logging=promtail"



  #      prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     # Main config file
  #     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     # Alert rules directory
  #     - ./prometheus/rules:/etc/prometheus/rules:ro
  #     # Data persistence
  #     - prometheus_data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #     - '--storage.tsdb.retention.time=15d'
  #     - '--web.enable-lifecycle'
  #     - '--web.enable-admin-api'
  #     - '--log.level=info'
  #   networks:
  #     - live_comments_network
  #   restart: unless-stopped
  #   labels:
  #     - "logging=promtail"

  # loki:
  #   image: grafana/loki:latest
  #   container_name: loki
  #   ports:
  #     - "3100:3100"
  #   volumes:
  #     # Loki configuration
  #     - ./loki/loki-config.yml:/etc/loki/local-config.yaml:ro
  #     # Data persistence
  #     - loki_data:/loki
  #   command: -config.file=/etc/loki/local-config.yaml
  #   networks:
  #     - live_comments_network
  #   restart: unless-stopped
  #   labels:
  #     - "logging=promtail"

  # promtail:
  #   image: grafana/promtail:latest
  #   container_name: promtail
  #   volumes:
  #     # Promtail configuration
  #     - ./promtail/promtail-config.yml:/etc/promtail/config.yml:ro
  #     # Docker socket for container discovery
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     # Docker container logs
  #     - /var/lib/docker/containers:/var/lib/docker/containers:ro
  #     # System logs
  #     - /var/log:/var/log:ro
  #   command: -config.file=/etc/promtail/config.yml
  #   networks:
  #     - live_comments_network
  #   restart: unless-stopped
  #   depends_on:
  #     - loki

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     # Admin credentials
  #     - GF_SECURITY_ADMIN_PASSWORD=admin123
  #     - GF_USERS_ALLOW_SIGN_UP=false
  #     # Enable anonymous access for development
  #     - GF_AUTH_ANONYMOUS_ENABLED=true
  #     - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
  #     # Logging
  #     - GF_LOG_LEVEL=info
  #     # Provisioning
  #     - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
  #   volumes:
  #     # Data persistence
  #     - grafana_data:/var/lib/grafana
  #     # Provisioning files (datasources, dashboards config)
  #     - ./grafana/provisioning:/etc/grafana/provisioning:ro
  #     # Dashboard JSON files
  #     - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
  #     # Custom grafana.ini if needed
  #     - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
  #   networks:
  #     - live_comments_network
  #   restart: unless-stopped
  #   depends_on:
  #     - prometheus
  #     - loki
  #   labels:
  #     - "logging=promtail"
